<?xml version="1.0"?>
<robot name="summit_xl" xmlns:xacro="http://wiki.ros.org/xacro">


	<!-- ***************** -->
	<!-- Imported elements -->
	<!-- ***************** -->

	<!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->

	<!-- Import summit XL base elements -->
	<xacro:include filename="$(find summit_xl_description)/urdf/bases/summit_xl_hls_base.urdf.xacro" />

	<!-- Import summit XL wheels -->
	<xacro:include filename="$(find summit_xl_description)/urdf/wheels/omni_wheel.urdf.xacro" />
	<xacro:include filename="$(find summit_xl_description)/urdf/wheels/rubber_wheel.urdf.xacro" />
	<xacro:include filename="$(find summit_xl_description)/urdf/structures/structure_hokuyo.urdf.xacro" />

	<!-- Import all available sensors -->
	<xacro:include filename="$(find robotnik_sensors)/urdf/all_sensors.urdf.xacro" />
	<!-- Import our modified sensor -->
	<xacro:include filename="$(find icclab_summit_xl)/urdf/sensors/hokuyo_utm30lx_no_frame_prefix.urdf.xacro" />
	<xacro:include filename="$(find icclab_summit_xl)/urdf/sensors/orbbec_astra.urdf.xacro" />
	<xacro:include filename="$(find icclab_summit_xl)/urdf/sensors/intel_d435.urdf.xacro" />
	<xacro:include filename="$(find icclab_summit_xl)/urdf/sensors/intel_camera_mount.urdf.xacro" />
	<!-- Import and create arm -->
	<xacro:include filename="$(find icclab_summit_xl)/urdf/arm/ur.urdf.xacro" />
	<!-- Import gripper -->
    <xacro:include filename="$(find icclab_summit_xl)/urdf/robotiq_gripper/robotiq_2f_140_macro.urdf.xacro" />

	<xacro:property name="PI" value="3.1415926535897931"/>

	<!-- Wheel parameters -->
	<!-- Wheel parameters -->
	<xacro:property name="wheel_offset_x" value="0.2225" />    <!-- x,y,z in translation from base_link to the center of the wheel -->
	<xacro:property name="wheel_offset_y" value="0.2045" />
	<xacro:property name="wheel_offset_z" value="0.0" />

	<xacro:property name="front_laser_offset_x" value="0.356"/>	
	<xacro:property name="front_laser_offset_y" value="-0.251"/>
	<xacro:property name="front_laser_offset_z" value="0.1566"/>

    <xacro:property name="rear_laser_offset_x" value="-0.35"/>
	<xacro:property name="rear_laser_offset_y" value="0.251"/>
	<xacro:property name="rear_laser_offset_z" value="0.1566"/>

	<xacro:property name="front_ptz_camera_offset_x" value="0.308"/>
	<xacro:property name="front_ptz_camera_offset_y" value="0.141"/>
	<xacro:property name="front_ptz_camera_offset_z" value="0.195"/>

	<xacro:property name="rear_ptz_camera_offset_x" value="-0.308"/>
	<xacro:property name="rear_ptz_camera_offset_y" value="-0.141"/>
	<xacro:property name="rear_ptz_camera_offset_z" value="0.195"/>

	<xacro:property name="imu_offset_x" value="0.127"/>
	<xacro:property name="imu_offset_y" value="-0.129"/>
	<xacro:property name="imu_offset_z" value="0.212"/>

	<xacro:property name="front_rgbd_camera_offset_x" value="0.35850"/>
	<xacro:property name="front_rgbd_camera_offset_y" value="0.0"/>
	<xacro:property name="front_rgbd_camera_offset_z" value="0.22062"/>

	<xacro:property name="gps_offset_x" value="-0.365"/>
	<xacro:property name="gps_offset_y" value="-0.167"/>
	<xacro:property name="gps_offset_z" value="0.302"/>

	<!-- Flag to select the high or low quality model -->
	<xacro:property name="hq" value="true" />

	<xacro:arg name="prefix" default=""/> <!-- was: summit_xl_-->
	<xacro:arg name="ros_planar_move_plugin" default="true"/>
	<xacro:arg name="gpu" default="false"/>
	<xacro:arg name="robot_id" default="summit"/>
	<xacro:arg name="robot_ns" default="$(arg robot_id)"/>


    <xacro:macro name="summit_xl" params="prefix publish_bf hq">

		<!-- *************** -->
		<!-- Robots Elements -->
		<!-- *************** -->

		<!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->

		<!-- Summit XL base -->
		<xacro:summit_xl_hls_base prefix="$(arg prefix)" publish_bf="true" hq="${hq}" />

		<xacro:omni_wheel prefix="$(arg prefix)front_right" parent="$(arg prefix)base_link" reflect="false" hq="${hq}">
			<origin xyz="${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
		</xacro:omni_wheel>

		<xacro:omni_wheel prefix="$(arg prefix)front_left" parent="$(arg prefix)base_link" reflect="true" hq="${hq}">
			<origin xyz="${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
		</xacro:omni_wheel>

		<xacro:omni_wheel prefix="$(arg prefix)rear_left" parent="$(arg prefix)base_link" reflect="true" hq="${hq}">
			<origin xyz="-${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
		</xacro:omni_wheel>

		<xacro:omni_wheel prefix="$(arg prefix)rear_right" parent="$(arg prefix)base_link" reflect="false" hq="${hq}">
			<origin xyz="-${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
		</xacro:omni_wheel>
        <!-- IMU -->
		<xacro:sensor_imu_hector prefix="$(arg prefix)imu" ns="$(arg robot_ns)" parent="$(arg prefix)base_link">
			<origin xyz="${imu_offset_x} ${imu_offset_y} ${imu_offset_z}" rpy="0 0 0"/>
		</xacro:sensor_imu_hector>


		<!-- SENSORS -->
		<xacro:sensor_hokuyo_utm30lx_no_frame_prefix ns="$(arg robot_ns)" prefix="front_laser" parent="base_link" min_angle="${-3/4*PI}" max_angle="${3/4*PI}" gpu="false">
			<origin xyz="${front_laser_offset_x} ${front_laser_offset_y} ${front_laser_offset_z}" rpy="0 0 ${-1/4*PI}" />
  		</xacro:sensor_hokuyo_utm30lx_no_frame_prefix>

        <xacro:sensor_hokuyo_utm30lx_no_frame_prefix ns="$(arg robot_ns)" prefix="rear_laser" parent="base_link" min_angle="${-3/4*PI}" max_angle="${3/4*PI}" gpu="false">
			<origin xyz="${rear_laser_offset_x} ${rear_laser_offset_y} ${rear_laser_offset_z}" rpy="0 0 ${3/4*PI}" />
  		</xacro:sensor_hokuyo_utm30lx_no_frame_prefix>

		<!--xacro:sensor_axis_m5013 prefix="$(arg prefix)front_ptz_camera" parent="$(arg prefix)base_link">
			<origin xyz="${front_ptz_camera_offset_x} ${front_ptz_camera_offset_y} ${front_ptz_camera_offset_z}" rpy="${-PI/2} 0 0"/>
		</xacro:sensor_axis_m5013-->

		<!--xacro:sensor_axis_m5013 prefix="$(arg prefix)rear_ptz_camera" parent="$(arg prefix)base_link">
			<origin xyz="${rear_ptz_camera_offset_x} ${rear_ptz_camera_offset_y} ${rear_ptz_camera_offset_z}" rpy="${-PI/2} 0 ${PI}"/>
		</xacro:sensor_axis_m5013-->


		<xacro:sensor_orbbec_astra_icclab prefix="$(arg prefix)front_rgbd_camera" parent="$(arg prefix)base_link" ns="$(arg robot_ns)">
			<origin xyz="${front_rgbd_camera_offset_x} ${front_rgbd_camera_offset_y} ${front_rgbd_camera_offset_z}" rpy="0 0 0"/>
		</xacro:sensor_orbbec_astra_icclab>

		<!--xacro:sensor_gps prefix="$(arg prefix)gps" parent="$(arg prefix)base_link">
			<origin xyz="${gps_offset_x} ${gps_offset_y} ${gps_offset_z}" rpy="0 0 0"/>
		</xacro:sensor_gps-->

		<xacro:robotiq_gripper name="RobotiqGripperHardwareInterface" prefix="" parent="arm_tool0" use_fake_hardware="true">
        	<origin xyz="0 0 0" rpy="0 0 0" />
    	</xacro:robotiq_gripper>

		<!-- Camera mount -->
		<xacro:camera_mount prefix="arm" parent="arm_flange">
			<origin xyz="0 0 0" rpy="${-PI/2} 0 ${-PI/2}" />
		</xacro:camera_mount>

		<!-- Camera on gripper  --> 
		<!-- had to copy and modidy camera to avoid name clash with robotnik defined sensors -->
		<xacro:sensor_d435_icclab prefix="arm_camera" ns="$(arg robot_ns)" parent="arm_camera_mount_link">
     		  <origin xyz="0.0 0.06 0.01" rpy="${PI} ${-PI/2} ${PI/2}"/> <!-- camera on gripper -->
   		</xacro:sensor_d435_icclab> 

   </xacro:macro>

   
   <xacro:if value="$(arg ros_planar_move_plugin)">
	   <xacro:omni_steering namespace="$(arg robot_ns)" publish_tf="true"/>
   </xacro:if>

   <xacro:summit_xl prefix="$(arg prefix)" publish_bf="true" hq="true"/>

   <!-- Gazebo ros control plugins -->
  <xacro:arg name="config_controllers" default=""/>
  <xacro:include filename="$(find summit_xl_description)/urdf/ros2_control.urdf.xacro"/>
  <xacro:ros2_control/>

</robot>
